<UserControl x:Class="VMM.Content.View.MusicListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:view="clr-namespace:VMM.Content.View"
             xmlns:viewModel="clr-namespace:VMM.Content.ViewModel"
             xmlns:behavior="clr-namespace:VMM.Control.Behavior"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModel:MusicListViewModel}"
             d:DesignHeight="300" d:DesignWidth="300" Loaded="ViewLoaded">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="3" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ListView x:Name="MusciView" Grid.Row="1" ItemsSource="{Binding Music}" SelectionMode="Extended"
                  SelectedItem="{Binding SelectedSong}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Скачать" Command="{Binding SaveSelectedCommand}"
                              CommandParameter="{Binding SelectedItems}" />
                    <MenuItem Header="Сортировать" Command="{Binding SortCommand}"
                              CommandParameter="{Binding SelectedItems}" />
                    <Separator Visibility="{Binding Path=CanEdit, Converter={StaticResource BoolToVisible}}" />
                    <MenuItem Header="Удалить" Command="{Binding RemoveSelectedCommand}"
                              CommandParameter="{Binding SelectedItems}"
                              Visibility="{Binding Path=CanEdit, Converter={StaticResource BoolToVisible}}" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                    <Setter Property="Margin"
                            Value="0" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Padding"
                            Value="5,2,5,2" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid Background="{TemplateBinding Background}">
                                    <Border Name="Selection" Visibility="Collapsed" />
                                    <!-- This is used when GridView is put inside the ListView -->
                                    <GridViewRowPresenter Grid.RowSpan="2"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <!-- This is used for ListView that does not use GridView -->
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      Content="{TemplateBinding ContentControl.Content}"
                                                      Visibility="Collapsed"
                                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                        <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="Selection" Property="Background"
                                                Value="{DynamicResource ItemBackgroundHover}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Selection" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="Selection" Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource AccentColor}" Opacity="0.5" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <view:MusicEntryView/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <i:Interaction.Behaviors>
                <behavior:ScrollIntoViewBehavior/>
            </i:Interaction.Behaviors>
        </ListView>
    </Grid>
</UserControl>